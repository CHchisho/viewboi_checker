const { getStreamsInfo } = require('./twitchService');
const { writeFile } = require('./file');
const path = require('path');
const { CHANNELS_TO_MONITOR } = require('./CHANNELS_TO_MONITOR');
const messagesActions = require('./messagesActions');

// –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∏–º–∞—Ö
const STREAMS_DATA_DIR = path.join(__dirname, '..', 'streamsData');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Ç–∞–π–º–µ—Ä–æ–≤
let initialTimeoutId = null;
let intervalId = null;


/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ –¥–µ—Å—è—Ç–∫–∞ –º–∏–Ω—É—Ç
 * @returns {number} –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 */
function getDelayToNextTenMinutes() {
	const now = new Date();
	const minutes = now.getMinutes();
	const seconds = now.getSeconds();
	const milliseconds = now.getMilliseconds();

	// –í—ã—á–∏—Å–ª—è–µ–º —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–µ—Å—è—Ç–∫–∞
	const minutesToNextTen = (10 - (minutes % 10)) % 10;

	// –ï—Å–ª–∏ —Å–µ–π—á–∞—Å —É–∂–µ –Ω–∞ –¥–µ—Å—è—Ç–∫–µ –º–∏–Ω—É—Ç, –∂–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ
	const targetMinutes = minutesToNextTen === 0 ? 10 : minutesToNextTen;

	// –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é –∑–∞–¥–µ—Ä–∂–∫—É
	const delayMs = (targetMinutes * 60 - seconds) * 1000 - milliseconds;

	console.log(`–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${now.toLocaleTimeString()}`);
	console.log(`–°–ª–µ–¥—É—é—â–∏–π –æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑: ${Math.round(delayMs / 1000)} —Å–µ–∫—É–Ω–¥ (—á–µ—Ä–µ–∑ ${targetMinutes} –º–∏–Ω—É—Ç)`);

	return delayMs;
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∏–º–µ—Ä–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
 * @param {Object} user - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
 * @param {Object} stream - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—Ä–∏–º–µ (–º–æ–∂–µ—Ç –±—ã—Ç—å undefined)
 * @param {Object} chatData - –î–∞–Ω–Ω—ã–µ —á–∞—Ç–∞ –∑–∞ 10 –º–∏–Ω—É—Ç
 * @returns {Object} –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Å—Ç—Ä–∏–º–µ—Ä–µ
 */
function createStreamerData(user, stream, chatData = null) {
	const isActive = stream !== undefined && stream !== null;
	const channelName = `#${user.login}`;

	// –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–∞—Ç–∞
	let messagesPerMinute = 0;
	let uniqueUsers = 0;
	let chattersPercentage = 0;

	if (chatData && chatData.tempPerTenMinutesLogs[channelName]) {
		const minuteData = chatData.tempPerTenMinutesLogs[channelName];
		if (minuteData.length > 0) {
			// –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –º–∏–Ω—É—Ç—É
			messagesPerMinute = Math.round(
				minuteData.reduce((sum, data) => sum + data.messagesPerMinute, 0) / minuteData.length
			);

			// –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
			uniqueUsers = Math.round(
				minuteData.reduce((sum, data) => sum + data.uniqueUsers, 0) / minuteData.length
			);

			// –ü—Ä–æ—Ü–µ–Ω—Ç —á–∞—Ç–µ—Ä–æ–≤ –æ—Ç –∑—Ä–∏—Ç–µ–ª–µ–π
			const viewerCount = isActive ? stream.viewer_count : 0;
			chattersPercentage = viewerCount > 0 ? Math.round((uniqueUsers * 100 / viewerCount) * 100) / 100 : 0;
		}
	}

	return {
		user_login: user.login,
		title: isActive ? stream.title : '',
		game_name: isActive ? stream.game_name : '',
		viewer_count: isActive ? stream.viewer_count : 0,
		messagesPerMinute: messagesPerMinute,
		uniqueUsers: uniqueUsers,
		chattersPercentage: chattersPercentage,
		is_active: isActive,
		timestamp: new Date().toISOString()
	};
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∏–º–µ—Ä–µ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
 * @param {Object} streamerData - –î–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∏–º–µ—Ä–µ
 */
async function saveStreamerData(streamerData) {
	try {
		const fs = require('fs');
		const fileName = `${streamerData.user_login}.json`;
		const filePath = path.join(STREAMS_DATA_DIR, fileName);

		// –ß–∏—Ç–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
		let existingData = [];
		try {
			if (fs.existsSync(filePath)) {
				const fileContent = fs.readFileSync(filePath, 'utf8');
				const parsedData = JSON.parse(fileContent);
				existingData = parsedData[streamerData.user_login];
			}
		} catch (error) {
			console.log(`–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è —Å—Ç—Ä–∏–º–µ—Ä–∞: ${streamerData.user_login}`);
		}

		// –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
		existingData.push({
			title: streamerData.title,
			game_name: streamerData.game_name,
			viewer_count: streamerData.viewer_count,
			messagesPerMinute: streamerData.messagesPerMinute,
			uniqueUsers: streamerData.uniqueUsers,
			chattersPercentage: streamerData.chattersPercentage,
			is_active: streamerData.is_active,
			timestamp: streamerData.timestamp
		});

		// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		const dataToSave = {
			[streamerData.user_login]: existingData
		};

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
		await writeFile(filePath, dataToSave);
		// console.log(`–î–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∏–º–µ—Ä–∞ ${streamerData.user_login} —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ó–∞–ø–∏—Å–µ–π: ${existingData.length}`);
	} catch (error) {
		console.error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∏–º–µ—Ä–∞ ${streamerData.user_login}:`, error);
	}
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –≤—Å–µ—Ö —Å—Ç—Ä–∏–º–µ—Ä–∞—Ö
 * @param {Array} streamersData - –ú–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∏–º–µ—Ä–∞—Ö
 */
async function saveStreamsData(streamersData) {
	try {
		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥–æ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
		for (const streamerData of streamersData) {
			await saveStreamerData(streamerData);
		}
		console.log(`–î–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∏–º–∞—Ö –∑–∞ –º–∏–Ω—É—Ç—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –°—Ç—Ä–∏–º–µ—Ä–æ–≤: ${streamersData.length}, —Å–æ–æ–±—â–µ–Ω–∏–π: ${streamersData.reduce((sum, item) => sum + item.messagesPerMinute, 0)}`);
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∏–º–∞—Ö:', error);
	}
}

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–ø—Ä–æ—Å —Å—Ç—Ä–∏–º–æ–≤ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ
 */
async function performStreamsCheck() {
	messagesActions.processMinuteData(true); // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –º–∏–Ω—É—Ç—É

	try {
		console.log(`\n=== –û–ø—Ä–æ—Å —Å—Ç—Ä–∏–º–æ–≤ –≤ ${new Date().toLocaleTimeString()} ===`);

		// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–∞—Ç–∞ –∏–∑ messagesActions
		const chatData = messagesActions.getChatDataForSaving();

		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∏–º–∞—Ö
		const streamsData = await getStreamsInfo(CHANNELS_TO_MONITOR);

		if (!streamsData) {
			console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç—Ä–∏–º–∞—Ö');
			return;
		}

		const { streams, users } = streamsData;

		// –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—Ä–∏–º–µ—Ä–∞—Ö
		const streamersData = [];

		// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		for (const user of users) {
			// –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Å—Ç—Ä–∏–º
			const stream = streams.find(s => s.user_id === user.id);

			// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞
			const streamerData = createStreamerData(user, stream, chatData);
			streamersData.push(streamerData);

			// –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
			const status = streamerData.is_active ? 'üü¢ –í —ç—Ñ–∏—Ä–µ' : 'üî¥ –û—Ñ–ª–∞–π–Ω';
			console.log(`${user.display_name}: ${status} | –ó—Ä–∏—Ç–µ–ª–∏: ${streamerData.viewer_count} | –ò–≥—Ä–∞: ${streamerData.game_name} | –°–æ–æ–±—â–µ–Ω–∏–π/–º–∏–Ω: ${streamerData.messagesPerMinute} | –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: ${streamerData.uniqueUsers} | –ß–∞—Ç–µ—Ä—Å—ã: ${streamerData.chattersPercentage}%`);
		}

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
		await saveStreamsData(streamersData);

		// –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
		messagesActions.clearAllTempData();

		console.log(`=== –û–ø—Ä–æ—Å –∑–∞–≤–µ—Ä—à–µ–Ω. –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∏–º–µ—Ä–æ–≤: ${streamersData.length} ===`);

	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–ø—Ä–æ—Å–µ —Å—Ç—Ä–∏–º–æ–≤:', error);
	}
}

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–π –æ–ø—Ä–æ—Å —Å—Ç—Ä–∏–º–æ–≤ –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
 */
function startTenMinutesCheck() {
	console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∏–º–æ–≤...');

	console.log('‚ö†Ô∏è Warning: Skip ten minutes check!'); // –î–ª—è –¥–µ–ø–ª–æ—è
	return;

	// console.log(`–ú–æ–Ω–∏—Ç–æ—Ä–∏–º –∫–∞–Ω–∞–ª—ã: ${CHANNELS_TO_MONITOR.join(', ')}`);

	// –í—ã—á–∏—Å–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ –ø–µ—Ä–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞
	const initialDelay = getDelayToNextTenMinutes();

	// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤—ã–π –æ–ø—Ä–æ—Å —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
	initialTimeoutId = setTimeout(() => {
		// –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—ã–π –æ–ø—Ä–æ—Å
		performStreamsCheck();

		// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –æ–ø—Ä–æ—Å–æ–≤ (–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç)
		intervalId = setInterval(performStreamsCheck, 10 * 60 * 1000);

		// console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω–∞. –û–ø—Ä–æ—Å—ã –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç.');
	}, initialDelay);
}

/**
 * –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç—Ä–∏–º–æ–≤
 */
function stopTenMinutesCheck() {
	// –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä—ã –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
	if (initialTimeoutId) {
		clearTimeout(initialTimeoutId);
		initialTimeoutId = null;
	}

	if (intervalId) {
		clearInterval(intervalId);
		intervalId = null;
	}

	console.log('‚úÖ stopTenMinutesCheck');
}

module.exports = {
	startTenMinutesCheck,
	stopTenMinutesCheck,
	performStreamsCheck,
	CHANNELS_TO_MONITOR
};
